name: Action Tester
on:
  workflow_dispatch

jobs:
  bsi-release:
    name: BSI Release Testing
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Get Branch Name
        id: get-branch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        shell: bash
      - name: Get Release
        id: get-release
        run: |
          if [ "${BRANCH}" == "main" ]; then
            echo "::set-output name=release::${LMS_VERSION}"
          else
            echo "::set-output name=release::${BRANCH}"
          fi
        shell: bash
        env:
          BRANCH: ${{ steps.get-branch.outputs.branch }}
          LMS_VERSION: 20.22.10
      - name: Increment Release
        id: increment-release
        uses: Brightspace/third-party-actions@actions/github-script
        with:
          result-encoding: string
          script: |
            const release = process.env.RELEASE;
            const releaseRe = new RegExp(`^v${release.replace('.', '\\.')}-([0-9]+)$`);
            console.log('release', release, releaseRe);

            let maxVersion = 0;

            await github.paginate(github.repos.listReleases, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 100
              }, (response, done) => {
                const releases = response.data.map(release => release.tag_name);
                foreach (release in releases) {
                  const match = releaseRe.exec(releases[i]);
                  if (match) {
                    maxVersion = parseInt(match[1]);
                    return done();
                  }
                }
            });

            console.log(`Maximum existing build for release "${release}" is "${maxVersion}".`);
            console.log('return', `v${release}-${++maxVersion}`);
            return `v${release}-${++maxVersion}`;
        env:
          RELEASE: ${{ steps.get-release.outputs.release }}
